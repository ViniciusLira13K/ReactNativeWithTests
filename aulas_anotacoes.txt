==AULA 01== 19/04/2022

teste de unidade 	=> teste isolado
teste de integração => testes externos 
teste de interface 	=> teste como se fosse um usuario

piramide de testes
			UI
		untegração
	unidade -   unidade

mais voltado para mobile
	teste de fluxo - testa passo a passo dentro da aplicação
	teste de componente - teste em memoria
	TDD - Test Driven Development => Desenvolvimento guiado por testes

prós 
	menos bugs
	codigos coesos - codigos menores, separados
	ajuda na validação dos requisitos

contra
	aumento o custo a curto prazo - precisa de mais esforço
	metrica pode ser mal entendidas
	
	
== PROJETO == 
PARA EXECUTAR APLICAÇÃO EM EXPO
executar no expo
	npm start
executar api local(moc)
	npm run api (trocar ip no pacote json e em serviços)
	
biblioteca para teste
	jest - propria documentação do react native
		react-test-renderer
	react testing library
	react-hooks-testing-library
	detox - testes de interface (react native puro para usar)
==AULA 02== 19/04/2022

precisa instalar algumas dependencias quando se usa o expo, => expo install jest-expo jest
	criar script que esta na documentação => "test" : "jest"
	e adiciona no final do arquivo 
		"jest": {
  		 "preset": "jest-expo",
  		 "transformIgnorePatterns": [
  		   "node_modules/(?!((jest-)?react-native|@react-native(-community)?)|expo(nent)?|@expo(nent)?/.*|@expo-google-fonts/.*|react-navigation|@react-navigation/.*|@unimodules/.*|unimodules|sentry-expo|native-base|react-native-svg)"
  		 ]
	esses detalhes esta na documentação
criar a pasta tests com base na pasta src ou fazer na propria pasta do arquivo 
==	AULA 03 ==
Criando mock no teste leilão com jest.mock 
== AULA 04 == 23/04/22
Testando hooks
biblioteca que testa hooks são 
npm install --save-dev react-test-renderer@17.0.1 @testing-library/react-native @testing-library/react-hooks
criado pasta hooks dentro de test
rederizando o componente 
